#include <stdio.h>
#include <stdlib.h>
int main() {
    int n, i, *ptr;
    printf("Enter the number of elements: ");
    scanf("%d", &n);
    printf("\nFirst-fit memory allocation strategy:\n");
    ptr = (int*)malloc(n * sizeof(int));
    if (ptr == NULL) {
        printf("Memory allocation failed.\n");
        exit(1);
    }
    for (i = 0; i < n; i++) {
        printf("Enter element %d: ", i+1);
        scanf("%d", &ptr[i]);
    }
    printf("Elements entered:\n");
    for (i = 0; i < n; i++) {
        printf("%d ", ptr[i]);
    }
    free(ptr);
    printf("\n\nBest-fit memory allocation strategy:\n");
    ptr = (int*)malloc(n * sizeof(int));
    if (ptr == NULL) {
        printf("Memory allocation failed.\n");
        exit(1);
    }
    for (i = 0; i < n; i++) {
        printf("Enter element %d: ", i+1);
        scanf("%d", &ptr[i]);
    }
    printf("Elements entered:\n");
    for (i = 0; i < n; i++) {
        printf("%d ", ptr[i]);
    }
    free(ptr);

    // Worst-fit memory allocation strategy
    printf("\n\nWorst-fit memory allocation strategy:\n");
    ptr = (int*)malloc(n * sizeof(int));
    if (ptr == NULL) {
        printf("Memory allocation failed.\n");
        exit(1);
    }
    for (i = 0; i < n; i++) {
        printf("Enter element %d: ", i+1);
        scanf("%d", &ptr[i]);
    }
    printf("Elements entered:\n");
    for (i = 0; i < n; i++) {
        printf("%d ", ptr[i]);
    }
    free(ptr);

    return 0;
}
